<UserControl
    x:Class="WhoIsTweeting.Views.StatView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:WhoIsTweeting"
    xmlns:vm="clr-namespace:Wit.VM;assembly=Wit.VM"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type={x:Type vm:StatViewModel}}"
    d:DesignHeight="500" d:DesignWidth="450"
    UseLayoutRounding="False"
    SnapsToDevicePixels="True"
    Loaded="Window_Loaded">
    <UserControl.Resources>
        <Style x:Key="InfoKeyLabel" TargetType="Label">
            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Key="InfoValueLabel" TargetType="Label">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
    </UserControl.Resources>
    <TabControl Grid.Row="1" Margin="0,32,0,0" BorderThickness="0,1,0,0" Padding="0">
        <TabControl.Items>
            <TabItem Header="{x:Static local:Strings.Stat_Tab_Graph}">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="152"/>
                    </Grid.RowDefinitions>
                    <Border Margin="0,0,0,10" BorderBrush="#FF00B26E" BorderThickness="1">
                        <Grid x:Name="graphGrid" MouseMove="MoveCursor" MouseEnter="graphGrid_MouseEnter" MouseLeave="graphGrid_MouseLeave" Background="White" MouseWheel="graphGrid_MouseWheel">
                            <Polygon x:Name="polyAway" Fill="LightGray" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0,0" IsHitTestVisible="False" ClipToBounds="True">
                                <Polygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" ScaleY="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Polygon.RenderTransform>
                                <Polygon.Points>
                                    <PointCollection/>
                                </Polygon.Points>
                            </Polygon>
                            <Polygon x:Name="polyOnline" Fill="MediumSpringGreen" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0,0" IsHitTestVisible="False" ClipToBounds="True">
                                <Polygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" ScaleY="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Polygon.RenderTransform>
                                <Polygon.Points>
                                    <PointCollection/>
                                </Polygon.Points>
                            </Polygon>
                            <Line x:Name="cursor" Visibility="Hidden" X2="4294967295" Y2="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" Stroke="Black" X1="4294967295" IsHitTestVisible="False"/>
                            <Popup x:Name="peek" IsHitTestVisible="False" AllowsTransparency="True" PopupAnimation="Fade">
                                <Popup.Resources>
                                    <Style x:Key="NoPadding" TargetType="Label">
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                    <Style x:Key="PeekKey" BasedOn="{StaticResource NoPadding}" TargetType="Label">
                                        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
                                    </Style>
                                    <Style x:Key="PeekValue" BasedOn="{StaticResource NoPadding}" TargetType="Label">
                                        <Setter Property="Margin" Value="15,0,0,0"/>
                                    </Style>
                                </Popup.Resources>
                                <Border Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}" BorderBrush="{StaticResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Padding="3">
                                    <StackPanel>
                                        <Label Style="{StaticResource NoPadding}" FontWeight="Bold" Content="{Binding Key, FallbackValue=Date}" ContentStringFormat="{}{0:yyyy-MM-dd HH:mm:ss}"/>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Label Style="{StaticResource PeekKey}" Content="{x:Static local:Strings.Stat_Online}" ContentStringFormat="{}{0}:"/>
                                            <Label Style="{StaticResource PeekKey}" Content="{x:Static local:Strings.Stat_Away}" ContentStringFormat="{}{0}:" Grid.Row="1"/>
                                            <Label Style="{StaticResource PeekKey}" Content="{x:Static local:Strings.Stat_Offline}" ContentStringFormat="{}{0}:" Grid.Row="2"/>
                                            <Label Style="{StaticResource PeekValue}" Content="{Binding Value[0], FallbackValue=0}" Grid.Column="1"/>
                                            <Label Style="{StaticResource PeekValue}" Content="{Binding Value[1], FallbackValue=0}" Grid.Column="1" Grid.Row="1"/>
                                            <Label Style="{StaticResource PeekValue}" Content="{Binding Value[2], FallbackValue=0}" Grid.Column="1" Grid.Row="2"/>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <StackPanel Grid.Row="1">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <StackPanel Margin="0,0,20,0">
                                <Label Style="{StaticResource InfoKeyLabel}" Content="{x:Static local:Strings.Stat_DataFrom}"/>
                                <Label Grid.Row="1" Style="{StaticResource InfoValueLabel}" Content="{Binding From, FallbackValue=0000-00-00 00:00}"/>
                            </StackPanel>
                            <StackPanel>
                                <Label Style="{StaticResource InfoKeyLabel}" Content="{x:Static local:Strings.Stat_DataTo}"/>
                                <Label Grid.Row="1" Grid.Column="1" Style="{StaticResource InfoValueLabel}" Content="{Binding To, FallbackValue=0000-00-00 00:00}"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <StackPanel Margin="0,0,20,0">
                                <Label Style="{StaticResource InfoKeyLabel}" Content="{x:Static local:Strings.Stat_NumOfData}"/>
                                <Label Style="{StaticResource InfoValueLabel}" Content="{Binding DataCount, FallbackValue=0}"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,20,0">
                                <Label Style="{StaticResource InfoKeyLabel}" Content="{x:Static local:Strings.Stat_MinOnline}"/>
                                <Label Style="{StaticResource InfoValueLabel}" Content="{Binding MinOnline, FallbackValue=0}"/>
                            </StackPanel>
                            <StackPanel Margin="0,0,20,0">
                                <Label Style="{StaticResource InfoKeyLabel}" Content="{x:Static local:Strings.Stat_MaxOnline}"/>
                                <Label Style="{StaticResource InfoValueLabel}" Content="{Binding MaxOnline, FallbackValue=0}"/>
                            </StackPanel>
                            <StackPanel>
                                <Label Style="{StaticResource InfoKeyLabel}" Content="{x:Static local:Strings.Stat_AvgOnline}"/>
                                <Label Style="{StaticResource InfoValueLabel}" Content="{Binding AvgOnline, FallbackValue=0}" ContentStringFormat="{}{0:F2}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static local:Strings.Stat_Tab_Table}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Content="{Binding DataCount, FallbackValue=0}" ContentStringFormat="{x:Static local:Strings.Stat_NumOfDataFormat}" VerticalAlignment="Center"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Padding" Value="15,3"/>
                                </Style>
                            </StackPanel.Resources>
                            <Button Content="{x:Static local:Strings.Stat_Button_Export}" Margin="5" Click="OnExportClick"/>
                            <Button Content="{x:Static local:Strings.Stat_Button_Reset}" Margin="5" Click="OnResetClick"/>
                        </StackPanel>
                    </Grid>
                    <ListView Grid.Row="1" x:Name="list1" BorderThickness="0" Margin="-2,0">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding Key}">
                                    <GridViewColumn.Header>
                                        <Label Content="{x:Static local:Strings.Stat_Date}"/>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn DisplayMemberBinding="{Binding Value[0]}">
                                    <GridViewColumn.Header>
                                        <Label Content="{x:Static local:Strings.Stat_Online}"/>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn DisplayMemberBinding="{Binding Value[1]}">
                                    <GridViewColumn.Header>
                                        <Label Content="{x:Static local:Strings.Stat_Away}"/>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn DisplayMemberBinding="{Binding Value[2]}">
                                    <GridViewColumn.Header>
                                        <Label Content="{x:Static local:Strings.Stat_Offline}"/>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl.Items>
    </TabControl>
</UserControl>
