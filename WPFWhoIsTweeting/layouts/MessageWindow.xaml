<Window x:Class="WhoIsTweeting.MessageWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WhoIsTweeting"
        xmlns:vm="clr-namespace:Wit.VM;assembly=Wit.VM"
        mc:Ignorable="d"
        Title="MessageWindow" Height="215" Width="400" Background="{x:Null}" d:DataContext="{d:DesignInstance {x:Type vm:MessageViewModel}}" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterOwner" SizeToContent="Height" ShowInTaskbar="False" Loaded="Window_Loaded">
    <Window.Effect>
        <DropShadowEffect Color="MediumSpringGreen" Direction="0" RenderingBias="Quality" ShadowDepth="0"/>
    </Window.Effect>
    <Border BorderBrush="#FF333333" BorderThickness="5" CornerRadius="1" Margin="5">
        <StackPanel Background="{x:Static SystemColors.ControlBrush}">
            <StackPanel Background="#FF333333">
                <Label Foreground="whitesmoke" FontWeight="Bold" Padding="5,0">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="MentionWindow">
                                    <Setter Property="Content" Value="{x:Static local:Strings.Message_Header_Mention}" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Content" Value="{x:Static local:Strings.Message_Header_DM}" />
                        </Style>
                    </Label.Style>
                </Label>
                <Label FontSize="16" Padding="5,0,5,5">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="MediumSpringGreen"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding User.Status}" Value="Away">
                                    <Setter Property="Foreground" Value="LightGray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding User.Status}" Value="Offline">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                    <TextBlock Text="{Binding User.ScreenName, Mode=OneWay, StringFormat=@{0}}"/>
                </Label>
            </StackPanel>
            <TextBox x:Name="content" Text="{Binding Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="{Binding MaxChars, Mode=OneWay}" BorderThickness="0" Padding="3" Height="80" TabIndex="0" AcceptsReturn="True" TextWrapping="Wrap"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                <Button Content="{x:Static local:Strings.Button_Send}" Padding="15,3" Command="{Binding SendCommand}" TabIndex="1">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Content}" Value="">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="{x:Static local:Strings.Button_Cancel}" Margin="5,0,0,0" Padding="15,3" Command="{Binding CancelCommand}" TabIndex="2"/>
            </StackPanel>
        </StackPanel>
    </Border>
</Window>
